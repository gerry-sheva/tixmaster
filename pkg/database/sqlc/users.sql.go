// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package sqlc

import (
	"context"
)

const getUser = `-- name: GetUser :one
select email, password from users where username=$1 or email=$2
`

type GetUserParams struct {
	Username string
	Email    string
}

type GetUserRow struct {
	Email    string
	Password string
}

func (q *Queries) GetUser(ctx context.Context, arg GetUserParams) (GetUserRow, error) {
	row := q.db.QueryRow(ctx, getUser, arg.Username, arg.Email)
	var i GetUserRow
	err := row.Scan(&i.Email, &i.Password)
	return i, err
}

const newUser = `-- name: NewUser :one
insert into users (username, email, password) values ($1, $2, $3) returning email
`

type NewUserParams struct {
	Username string
	Email    string
	Password string
}

func (q *Queries) NewUser(ctx context.Context, arg NewUserParams) (string, error) {
	row := q.db.QueryRow(ctx, newUser, arg.Username, arg.Email, arg.Password)
	var email string
	err := row.Scan(&email)
	return email, err
}
