// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package tixmaster

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUser = `-- name: GetUser :one
select user_id, username, email from users where user_id=$1
`

type GetUserRow struct {
	UserID   pgtype.UUID
	Username string
	Email    string
}

func (q *Queries) GetUser(ctx context.Context, userID pgtype.UUID) (GetUserRow, error) {
	row := q.db.QueryRow(ctx, getUser, userID)
	var i GetUserRow
	err := row.Scan(&i.UserID, &i.Username, &i.Email)
	return i, err
}

const newUser = `-- name: NewUser :one
insert into users (username, email, password) values ($1, $2, $3) returning user_id, username, email
`

type NewUserParams struct {
	Username string
	Email    string
	Password string
}

type NewUserRow struct {
	UserID   pgtype.UUID
	Username string
	Email    string
}

func (q *Queries) NewUser(ctx context.Context, arg NewUserParams) (NewUserRow, error) {
	row := q.db.QueryRow(ctx, newUser, arg.Username, arg.Email, arg.Password)
	var i NewUserRow
	err := row.Scan(&i.UserID, &i.Username, &i.Email)
	return i, err
}
